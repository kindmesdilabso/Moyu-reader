"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var PDBRecord_1 = __importDefault(require("js-mobi/PDBRecord"));
var PDBHeader = /** @class */ (function () {
    function PDBHeader() {
    }
    PDBHeader.readHeader = function (uint8) {
        var header = new PDBHeader();
        var dv = new DataView(uint8.buffer);
        var utf8decoder = new TextDecoder('utf-8');
        header.name = utf8decoder.decode(uint8.slice(0, 32));
        header.attributes = dv.getUint16(32);
        header.version = dv.getUint16(34);
        header.creationDate = dv.getUint32(36);
        header.modificationDate = dv.getUint32(40);
        header.lastBackupDate = dv.getUint32(44);
        header.modificationNumber = dv.getUint32(48);
        header.appInfoID = dv.getUint32(52);
        header.sortInfoID = dv.getUint32(56);
        header.type = dv.getUint32(60);
        header.creator = dv.getUint32(64);
        header.uniqueIDSeed = dv.getUint32(68);
        header.nextRecordListID = dv.getUint32(72);
        header.recordCount = dv.getUint16(76);
        header.records = [];
        for (var i = 0; i < header.recordCount; i++) {
            var content = new DataView(uint8.slice(78 + i * 8).buffer);
            var record = new PDBRecord_1.default({
                recordDataOffset: content.getUint32(0),
                recordAttributes: content.getUint8(4),
                uniqueID: (content.getUint16(5) << 16) + content.getUint8(7)
            });
            header.records.push(record);
        }
        return header;
    };
    return PDBHeader;
}());
exports.default = PDBHeader;
//# sourceMappingURL=PDBHeader.js.map