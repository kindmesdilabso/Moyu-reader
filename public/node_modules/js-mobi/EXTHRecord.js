"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EXTHRecordType = void 0;
var EXTHRecordType;
(function (EXTHRecordType) {
    EXTHRecordType[EXTHRecordType["AUTHOR"] = 100] = "AUTHOR";
    EXTHRecordType[EXTHRecordType["PUBLISHER"] = 101] = "PUBLISHER";
    EXTHRecordType[EXTHRecordType["IMPRINT"] = 102] = "IMPRINT";
    EXTHRecordType[EXTHRecordType["DESCRIPTION"] = 103] = "DESCRIPTION";
    EXTHRecordType[EXTHRecordType["ISBN"] = 104] = "ISBN";
    EXTHRecordType[EXTHRecordType["SUBJECT"] = 105] = "SUBJECT";
    EXTHRecordType[EXTHRecordType["PUBLISHING_DATE"] = 106] = "PUBLISHING_DATE";
    EXTHRecordType[EXTHRecordType["REVIEW"] = 107] = "REVIEW";
    EXTHRecordType[EXTHRecordType["CONTRIBUTOR"] = 108] = "CONTRIBUTOR";
    EXTHRecordType[EXTHRecordType["RIGHTS"] = 109] = "RIGHTS";
    EXTHRecordType[EXTHRecordType["SUBJECT_CODE"] = 110] = "SUBJECT_CODE";
    EXTHRecordType[EXTHRecordType["TYPE"] = 111] = "TYPE";
    EXTHRecordType[EXTHRecordType["SOURCE"] = 112] = "SOURCE";
    /** Kindle Paperwhite labels books with "Personal" if they don't have this record. */
    EXTHRecordType[EXTHRecordType["ASIN"] = 113] = "ASIN";
    EXTHRecordType[EXTHRecordType["VERSION_NUMBER"] = 114] = "VERSION_NUMBER";
    /** 0x0001 if the book content is only a sample of the full book */
    EXTHRecordType[EXTHRecordType["SAMPLE"] = 115] = "SAMPLE";
    /** Position (4-byte offset) in file at which to open when first opened */
    EXTHRecordType[EXTHRecordType["STARTREADING"] = 116] = "STARTREADING";
    /** Mobipocket Creator adds this if Adult only is checked on its GUI; contents: "yes" */
    EXTHRecordType[EXTHRecordType["ADULT"] = 117] = "ADULT";
    /** As text, e.g. "4.99" */
    EXTHRecordType[EXTHRecordType["RETAIL_PRICE"] = 118] = "RETAIL_PRICE";
    /** As text, e.g. "USD" */
    EXTHRecordType[EXTHRecordType["RETAIL_PRICE_CURRENCY"] = 119] = "RETAIL_PRICE_CURRENCY";
    EXTHRecordType[EXTHRecordType["TSC"] = 120] = "TSC";
    EXTHRecordType[EXTHRecordType["KF8_BOUNDARY_OFFSET"] = 121] = "KF8_BOUNDARY_OFFSET";
    EXTHRecordType[EXTHRecordType["FIXED_LAYOUT"] = 122] = "FIXED_LAYOUT";
    EXTHRecordType[EXTHRecordType["BOOK_TYPE"] = 123] = "BOOK_TYPE";
    EXTHRecordType[EXTHRecordType["ORIENTATION_LOCK"] = 124] = "ORIENTATION_LOCK";
    EXTHRecordType[EXTHRecordType["COUNT_OF_RESOURCES"] = 125] = "COUNT_OF_RESOURCES";
    EXTHRecordType[EXTHRecordType["ORIGINAL_RESOLUTION"] = 126] = "ORIGINAL_RESOLUTION";
    EXTHRecordType[EXTHRecordType["ZERO_GUTTER"] = 127] = "ZERO_GUTTER";
    EXTHRecordType[EXTHRecordType["ZERO_MARGIN"] = 128] = "ZERO_MARGIN";
    EXTHRecordType[EXTHRecordType["KF8_COVER_URI"] = 129] = "KF8_COVER_URI";
    EXTHRecordType[EXTHRecordType["UNKNOWN_131"] = 131] = "UNKNOWN_131";
    EXTHRecordType[EXTHRecordType["REGION_MAGNIFICATION"] = 132] = "REGION_MAGNIFICATION";
    EXTHRecordType[EXTHRecordType["LENDING_ENABLED"] = 150] = "LENDING_ENABLED";
    /** As text */
    EXTHRecordType[EXTHRecordType["DICTIONARY_SHORT_NAME"] = 200] = "DICTIONARY_SHORT_NAME";
    /** Add to first image field in Mobi Header to find PDB record containing the cover image */
    EXTHRecordType[EXTHRecordType["COVER_OFFSET"] = 201] = "COVER_OFFSET";
    /** Add to first image field in Mobi Header to find PDB record containing the thumbnail cover image */
    EXTHRecordType[EXTHRecordType["THUMBNAIL_OFFSET"] = 202] = "THUMBNAIL_OFFSET";
    EXTHRecordType[EXTHRecordType["HAS_FAKE_COVER"] = 203] = "HAS_FAKE_COVER";
    /** Known Values: 1=mobigen, 2=Mobipocket Creator, 200=kindlegen (Windows), 201=kindlegen (Linux),
     *  02=kindlegen (Mac).
     * Warning: Calibre creates fake creator entries, pretending to be a Linux kindlegen 1.2 (201, 1, 2,
     * 33307) for normal ebooks and a non-public Linux kindlegen 2.0 (201, 2, 0, 101) for periodicals.
     */
    EXTHRecordType[EXTHRecordType["CREATOR_SOFTWARE"] = 204] = "CREATOR_SOFTWARE";
    EXTHRecordType[EXTHRecordType["CREATOR_MAJOR_VERSION"] = 205] = "CREATOR_MAJOR_VERSION";
    EXTHRecordType[EXTHRecordType["CREATOR_MINOR_VERSION"] = 206] = "CREATOR_MINOR_VERSION";
    EXTHRecordType[EXTHRecordType["CREATOR_BUILD_NUMBER"] = 207] = "CREATOR_BUILD_NUMBER";
    EXTHRecordType[EXTHRecordType["WATERMARK"] = 208] = "WATERMARK";
    /** Used by the Kindle (and Android app) for generating book-specific PIDs. */
    EXTHRecordType[EXTHRecordType["TAMPER_PROOF_KEYS"] = 209] = "TAMPER_PROOF_KEYS";
    EXTHRecordType[EXTHRecordType["FONT_SIGNATURE"] = 300] = "FONT_SIGNATURE";
    /** Integer percentage of the text allowed to be clipped. Usually 10. */
    EXTHRecordType[EXTHRecordType["CLIPPING_LIMIT"] = 401] = "CLIPPING_LIMIT";
    EXTHRecordType[EXTHRecordType["PUBLISHER_LIMIT"] = 402] = "PUBLISHER_LIMIT";
    EXTHRecordType[EXTHRecordType["UNKNOWN_403"] = 403] = "UNKNOWN_403";
    /** 1 - Text to Speech disabled; 0 - Text to Speech enabled */
    EXTHRecordType[EXTHRecordType["TTS_OFF"] = 404] = "TTS_OFF";
    /** 1 in this field seems to indicate a rental book */
    EXTHRecordType[EXTHRecordType["BORROWED"] = 405] = "BORROWED";
    /** If this field is removed from a rental, the book says it expired in 1969 */
    EXTHRecordType[EXTHRecordType["BORROWED_EXPIRATION"] = 406] = "BORROWED_EXPIRATION";
    EXTHRecordType[EXTHRecordType["UNKNOWN_407"] = 407] = "UNKNOWN_407";
    EXTHRecordType[EXTHRecordType["UNKNOWN_450"] = 450] = "UNKNOWN_450";
    EXTHRecordType[EXTHRecordType["UNKNOWN_451"] = 451] = "UNKNOWN_451";
    EXTHRecordType[EXTHRecordType["UNKNOWN_452"] = 452] = "UNKNOWN_452";
    EXTHRecordType[EXTHRecordType["UNKNOWN_453"] = 453] = "UNKNOWN_453";
    /** PDOC - Personal Doc; EBOK - ebook; EBSP - ebook sample; */
    EXTHRecordType[EXTHRecordType["CDE_TYPE"] = 501] = "CDE_TYPE";
    EXTHRecordType[EXTHRecordType["LAST_UPDATE_TIME"] = 502] = "LAST_UPDATE_TIME";
    EXTHRecordType[EXTHRecordType["UPDATED_TITLE"] = 503] = "UPDATED_TITLE";
    /** There is sometimes a copy of the asin here. */
    EXTHRecordType[EXTHRecordType["ASIN_COPY"] = 504] = "ASIN_COPY";
    EXTHRecordType[EXTHRecordType["AMAZON_CONTENT_REFERENCE"] = 505] = "AMAZON_CONTENT_REFERENCE";
    EXTHRecordType[EXTHRecordType["TITLE_LANGUAGE"] = 506] = "TITLE_LANGUAGE";
    EXTHRecordType[EXTHRecordType["TITLE_DISPLAY_DIRECTION"] = 507] = "TITLE_DISPLAY_DIRECTION";
    EXTHRecordType[EXTHRecordType["TITLE_PRONUNCIATION"] = 508] = "TITLE_PRONUNCIATION";
    EXTHRecordType[EXTHRecordType["TITLE_COLLATION"] = 509] = "TITLE_COLLATION";
    EXTHRecordType[EXTHRecordType["SECONDARY_TITLE"] = 510] = "SECONDARY_TITLE";
    EXTHRecordType[EXTHRecordType["SECONDARY_TITLE_LANGUAGE"] = 511] = "SECONDARY_TITLE_LANGUAGE";
    EXTHRecordType[EXTHRecordType["SECONDARY_TITLE_DIRECTION"] = 512] = "SECONDARY_TITLE_DIRECTION";
    EXTHRecordType[EXTHRecordType["SECONDARY_TITLE_PRONUNCIATION"] = 513] = "SECONDARY_TITLE_PRONUNCIATION";
    EXTHRecordType[EXTHRecordType["SECONDARY_TITLE_COLLATION"] = 514] = "SECONDARY_TITLE_COLLATION";
    EXTHRecordType[EXTHRecordType["AUTHOR_LANGUAGE"] = 515] = "AUTHOR_LANGUAGE";
    EXTHRecordType[EXTHRecordType["AUTHOR_DISPLAY_DIRECTION"] = 516] = "AUTHOR_DISPLAY_DIRECTION";
    EXTHRecordType[EXTHRecordType["AUTHOR_PRONUNCIATION"] = 517] = "AUTHOR_PRONUNCIATION";
    EXTHRecordType[EXTHRecordType["AUTHOR_COLLATION"] = 518] = "AUTHOR_COLLATION";
    EXTHRecordType[EXTHRecordType["AUTHOR_TYPE"] = 519] = "AUTHOR_TYPE";
    EXTHRecordType[EXTHRecordType["PUBLISHER_LANGUAGE"] = 520] = "PUBLISHER_LANGUAGE";
    EXTHRecordType[EXTHRecordType["PUBLISHER_DISPLAY_DIRECTION"] = 521] = "PUBLISHER_DISPLAY_DIRECTION";
    EXTHRecordType[EXTHRecordType["PUBLISHER_PRONUNCIATION"] = 522] = "PUBLISHER_PRONUNCIATION";
    EXTHRecordType[EXTHRecordType["PUBLISHER_COLLATION"] = 523] = "PUBLISHER_COLLATION";
    EXTHRecordType[EXTHRecordType["LANGUAGE"] = 524] = "LANGUAGE";
    EXTHRecordType[EXTHRecordType["ALIGNMENT"] = 525] = "ALIGNMENT";
    EXTHRecordType[EXTHRecordType["NCX_INGESTED_BY_SOFTWARE"] = 526] = "NCX_INGESTED_BY_SOFTWARE";
    EXTHRecordType[EXTHRecordType["PAGE_PROGRESSION_DIRECTION"] = 527] = "PAGE_PROGRESSION_DIRECTION";
    EXTHRecordType[EXTHRecordType["OVERRIDE_KINDLE_FONTS"] = 528] = "OVERRIDE_KINDLE_FONTS";
    EXTHRecordType[EXTHRecordType["COMPRESSION_UPGRADED"] = 529] = "COMPRESSION_UPGRADED";
    EXTHRecordType[EXTHRecordType["SOFT_HYPHENS_IN_CONTENT"] = 530] = "SOFT_HYPHENS_IN_CONTENT";
    EXTHRecordType[EXTHRecordType["DICTIONARY_IN_LANGAGUE"] = 531] = "DICTIONARY_IN_LANGAGUE";
    EXTHRecordType[EXTHRecordType["DICTIONARY_OUT_LANGUAGE"] = 532] = "DICTIONARY_OUT_LANGUAGE";
    EXTHRecordType[EXTHRecordType["FONT_CONVERTED"] = 533] = "FONT_CONVERTED";
    EXTHRecordType[EXTHRecordType["AMAZON_CREATOR_INFO"] = 534] = "AMAZON_CREATOR_INFO";
    /** found 1019-d6e4792 in this record, which is a build number of Kindlegen 2.7 */
    EXTHRecordType[EXTHRecordType["CREATOR_BUILD_NUMBER_COPY"] = 535] = "CREATOR_BUILD_NUMBER_COPY";
    /** CONT_Header is 0, Ends with CONTAINER_BOUNDARY (or Asset_Type?) */
    EXTHRecordType[EXTHRecordType["HD_MEDIA_CONTAINERS_INFO"] = 536] = "HD_MEDIA_CONTAINERS_INFO";
    EXTHRecordType[EXTHRecordType["RESOURCE_CONTAINER_FIDELITY"] = 538] = "RESOURCE_CONTAINER_FIDELITY";
    EXTHRecordType[EXTHRecordType["HD_CONTAINER_MIMETYPE"] = 539] = "HD_CONTAINER_MIMETYPE";
    EXTHRecordType[EXTHRecordType["SAMPLE_FOR_SPECIAL_PURPOSE"] = 540] = "SAMPLE_FOR_SPECIAL_PURPOSE";
    EXTHRecordType[EXTHRecordType["KINDLETOOL_OPERATION_INFORMATION"] = 541] = "KINDLETOOL_OPERATION_INFORMATION";
    EXTHRecordType[EXTHRecordType["CONTAINER_ID"] = 542] = "CONTAINER_ID";
    EXTHRecordType[EXTHRecordType["ASSET_TYPE"] = 543] = "ASSET_TYPE";
    EXTHRecordType[EXTHRecordType["UNKNOWN_544"] = 544] = "UNKNOWN_544";
    /** String 'I\x00n\x00M\x00e\x00m\x00o\x00r\x00y\x00' found in this record, for KindleGen V2.9 build 1029-0897292 */
    EXTHRecordType[EXTHRecordType["IN_MEMORY"] = 547] = "IN_MEMORY";
})(EXTHRecordType = exports.EXTHRecordType || (exports.EXTHRecordType = {}));
var EXTHRecord = /** @class */ (function () {
    function EXTHRecord(uint8, exthRecordOffset) {
        var dv = new DataView(uint8.buffer);
        this.recordType = dv.getUint32(exthRecordOffset);
        var length = dv.getUint32(exthRecordOffset + 4);
        if (length < 8) {
            throw new RangeError('Invalid EXTH record length');
        }
        this.recordData = uint8.slice(exthRecordOffset + 8, exthRecordOffset + length);
    }
    EXTHRecord.readEXTHRecord = function (uint8, exthRecordOffset) {
        return new EXTHRecord(uint8, exthRecordOffset);
    };
    EXTHRecord.prototype.getIntData = function () {
        var total = 0;
        var len = this.recordData.length;
        for (var i = 0; i < len; i++) {
            total = (total << 8) + (this.recordData[i] & 0xff);
        }
        return total;
    };
    EXTHRecord.prototype.getRecordLength = function () {
        return this.getRecordDataLength() + 8;
    };
    EXTHRecord.prototype.getRecordDataLength = function () {
        return this.recordData != null ? this.recordData.length : 0;
    };
    return EXTHRecord;
}());
exports.default = EXTHRecord;
//# sourceMappingURL=EXTHRecord.js.map