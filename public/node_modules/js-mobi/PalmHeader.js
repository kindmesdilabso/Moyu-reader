"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PalmHeaderCompression = exports.PalmHeaderLength = void 0;
exports.PalmHeaderLength = 16;
var PalmHeaderCompression;
(function (PalmHeaderCompression) {
    PalmHeaderCompression[PalmHeaderCompression["NONE"] = 1] = "NONE";
    PalmHeaderCompression[PalmHeaderCompression["PALM_DOC"] = 2] = "PALM_DOC";
    PalmHeaderCompression[PalmHeaderCompression["HUFF_CDIC"] = 17480] = "HUFF_CDIC";
})(PalmHeaderCompression = exports.PalmHeaderCompression || (exports.PalmHeaderCompression = {}));
var PalmHeader = /** @class */ (function () {
    function PalmHeader(uint8, recordDataOffset) {
        this.content = uint8.slice(recordDataOffset, recordDataOffset + exports.PalmHeaderLength);
        var dv = new DataView(this.content.buffer);
        this.compression = dv.getUint16(0);
        this.unused0 = dv.getUint16(2);
        this.textLength = dv.getUint32(4);
        this.recordCount = dv.getUint16(8);
        this.recordSize = dv.getUint16(10);
        this.encryptionType = dv.getUint16(12);
        this.unused1 = dv.getUint16(14);
    }
    PalmHeader.readPalmHeader = function (uint8, recordDataOffset) {
        return new PalmHeader(uint8, recordDataOffset);
    };
    return PalmHeader;
}());
exports.default = PalmHeader;
//# sourceMappingURL=PalmHeader.js.map